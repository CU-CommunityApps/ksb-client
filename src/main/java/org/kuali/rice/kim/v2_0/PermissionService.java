
package org.kuali.rice.kim.v2_0;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.kuali.rice.core.v2_0.QueryByCriteriaType;
import org.kuali.rice.core.v2_0.StringMapEntryListType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "permissionService", targetNamespace = "http://rice.kuali.org/kim/v2_0")
@XmlSeeAlso({
    org.kuali.rice.kim.v2_0.ObjectFactory.class,
    org.kuali.rice.core.v2_0.ObjectFactory.class
})
public interface PermissionService {


    /**
     * 
     * @param permissionTemplateName
     * @param namespaceCode
     * @param permissionDetails
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isPermissionDefinedByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isPermissionDefinedByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsPermissionDefinedByTemplate")
    @ResponseWrapper(localName = "isPermissionDefinedByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsPermissionDefinedByTemplateResponse")
    public boolean isPermissionDefinedByTemplate(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionTemplateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionTemplateName,
        @WebParam(name = "permissionDetails", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType permissionDetails)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param name
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.TemplateType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "permissionTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findPermTemplateByNamespaceCodeAndName", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermTemplateByNamespaceCodeAndName")
    @ResponseWrapper(localName = "findPermTemplateByNamespaceCodeAndNameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermTemplateByNamespaceCodeAndNameResponse")
    public TemplateType findPermTemplateByNamespaceCodeAndName(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "name", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String name)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.TemplateQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findPermissionTemplates", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissionTemplates")
    @ResponseWrapper(localName = "findPermissionTemplatesResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissionTemplatesResponse")
    public TemplateQueryResultsType findPermissionTemplates(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param permissionTemplateName
     * @param namespaceCode
     * @param permissionDetails
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsByTemplateResponse.Permissions
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "permissions", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getAuthorizedPermissionsByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsByTemplate")
    @ResponseWrapper(localName = "getAuthorizedPermissionsByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsByTemplateResponse")
    public org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsByTemplateResponse.Permissions getAuthorizedPermissionsByTemplate(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionTemplateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionTemplateName,
        @WebParam(name = "permissionDetails", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType permissionDetails,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param permissionTemplateName
     * @param namespaceCode
     * @param permissionDetails
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetPermissionAssigneesByTemplateResponse.Assignees
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "assignees", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getPermissionAssigneesByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionAssigneesByTemplate")
    @ResponseWrapper(localName = "getPermissionAssigneesByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionAssigneesByTemplateResponse")
    public org.kuali.rice.kim.v2_0.GetPermissionAssigneesByTemplateResponse.Assignees getPermissionAssigneesByTemplate(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionTemplateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionTemplateName,
        @WebParam(name = "permissionDetails", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType permissionDetails,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns org.kuali.rice.kim.v2_0.PermissionType
     */
    @WebMethod
    @WebResult(name = "permission", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermission")
    @ResponseWrapper(localName = "getPermissionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionResponse")
    public PermissionType getPermission(
        @WebParam(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String id);

    /**
     * 
     * @param qualification
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetPermissionAssigneesResponse.Assignees
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "assignees", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getPermissionAssignees", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionAssignees")
    @ResponseWrapper(localName = "getPermissionAssigneesResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionAssigneesResponse")
    public org.kuali.rice.kim.v2_0.GetPermissionAssigneesResponse.Assignees getPermissionAssignees(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsResponse.Permissions
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "permissions", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getAuthorizedPermissions", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAuthorizedPermissions")
    @ResponseWrapper(localName = "getAuthorizedPermissionsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsResponse")
    public org.kuali.rice.kim.v2_0.GetAuthorizedPermissionsResponse.Permissions getAuthorizedPermissions(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.PermissionQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findPermissions", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissions")
    @ResponseWrapper(localName = "findPermissionsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissionsResponse")
    public PermissionQueryResultsType findPermissions(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param name
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.PermissionType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "permission", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findPermByNamespaceCodeAndName", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermByNamespaceCodeAndName")
    @ResponseWrapper(localName = "findPermByNamespaceCodeAndNameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermByNamespaceCodeAndNameResponse")
    public PermissionType findPermByNamespaceCodeAndName(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "name", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String name)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param namespaceCode
     * @param templateName
     * @return
     *     returns org.kuali.rice.kim.v2_0.FindPermissionsByTemplateResponse.Permissions
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "permissions", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findPermissionsByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissionsByTemplate")
    @ResponseWrapper(localName = "findPermissionsByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindPermissionsByTemplateResponse")
    public org.kuali.rice.kim.v2_0.FindPermissionsByTemplateResponse.Permissions findPermissionsByTemplate(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "templateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String templateName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetAllTemplatesResponse.Templates
     */
    @WebMethod
    @WebResult(name = "templates", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getAllTemplates", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAllTemplates")
    @ResponseWrapper(localName = "getAllTemplatesResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetAllTemplatesResponse")
    public org.kuali.rice.kim.v2_0.GetAllTemplatesResponse.Templates getAllTemplates();

    /**
     * 
     * @param permission
     * @throws RiceIllegalStateException
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "updatePermission", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdatePermission")
    @ResponseWrapper(localName = "updatePermissionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdatePermissionResponse")
    public void updatePermission(
        @WebParam(name = "permission", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<PermissionType> permission)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns org.kuali.rice.kim.v2_0.TemplateType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getPermissionTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionTemplate")
    @ResponseWrapper(localName = "getPermissionTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPermissionTemplateResponse")
    public TemplateType getPermissionTemplate(
        @WebParam(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String id)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isAuthorized", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isAuthorized", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsAuthorized")
    @ResponseWrapper(localName = "isAuthorizedResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsAuthorizedResponse")
    public boolean isAuthorized(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param permission
     * @throws RiceIllegalStateException
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "createPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreatePermission")
    @ResponseWrapper(localName = "createPermissionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreatePermissionResponse")
    public void createPermission(
        @WebParam(name = "permission", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<PermissionType> permission)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param principalId
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "hasPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "hasPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.HasPermission")
    @ResponseWrapper(localName = "hasPermissionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.HasPermissionResponse")
    public boolean hasPermission(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleIdsForPermissionResponse.RoleIds
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleIdsForPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleIdsForPermission")
    @ResponseWrapper(localName = "getRoleIdsForPermissionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleIdsForPermissionResponse")
    public org.kuali.rice.kim.v2_0.GetRoleIdsForPermissionResponse.RoleIds getRoleIdsForPermission(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param principalId
     * @param permissionTemplateName
     * @param namespaceCode
     * @param permissionDetails
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "hasPermission", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "hasPermissionByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.HasPermissionByTemplate")
    @ResponseWrapper(localName = "hasPermissionByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.HasPermissionByTemplateResponse")
    public boolean hasPermissionByTemplate(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionTemplateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionTemplateName,
        @WebParam(name = "permissionDetails", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType permissionDetails)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param permissionTemplateName
     * @param namespaceCode
     * @param permissionDetails
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isAuthorized", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isAuthorizedByTemplate", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsAuthorizedByTemplate")
    @ResponseWrapper(localName = "isAuthorizedByTemplateResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsAuthorizedByTemplateResponse")
    public boolean isAuthorizedByTemplate(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionTemplateName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionTemplateName,
        @WebParam(name = "permissionDetails", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType permissionDetails,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param permissionName
     * @param namespaceCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isPermissionDefined", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isPermissionDefined", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsPermissionDefined")
    @ResponseWrapper(localName = "isPermissionDefinedResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsPermissionDefinedResponse")
    public boolean isPermissionDefined(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "permissionName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionName)
        throws RiceIllegalArgumentException
    ;

}
