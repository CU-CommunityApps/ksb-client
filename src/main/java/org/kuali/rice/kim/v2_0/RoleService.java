
package org.kuali.rice.kim.v2_0;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.kuali.rice.core.v2_0.QueryByCriteriaType;
import org.kuali.rice.core.v2_0.StringMapEntryListType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "roleService", targetNamespace = "http://rice.kuali.org/kim/v2_0")
@XmlSeeAlso({
    org.kuali.rice.kim.v2_0.ObjectFactory.class,
    org.kuali.rice.core.v2_0.ObjectFactory.class
})
public interface RoleService {


    /**
     * 
     * @param delegationId
     * @param memberId
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateMemberType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "delegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getDelegationMemberByDelegationAndMemberId", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMemberByDelegationAndMemberId")
    @ResponseWrapper(localName = "getDelegationMemberByDelegationAndMemberIdResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMemberByDelegationAndMemberIdResponse")
    public DelegateMemberType getDelegationMemberByDelegationAndMemberId(
        @WebParam(name = "delegationId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String delegationId,
        @WebParam(name = "memberId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String memberId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateId
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetDelegationMembersByDelegationIdResponse.DelegateMembers
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "delegateMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getDelegationMembersByDelegationId", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMembersByDelegationId")
    @ResponseWrapper(localName = "getDelegationMembersByDelegationIdResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMembersByDelegationIdResponse")
    public org.kuali.rice.kim.v2_0.GetDelegationMembersByDelegationIdResponse.DelegateMembers getDelegationMembersByDelegationId(
        @WebParam(name = "delegateId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String delegateId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualifications
     * @param principalId
     * @param roleName
     * @param namespaceCode
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "removePrincipalFromRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemovePrincipalFromRole")
    @ResponseWrapper(localName = "removePrincipalFromRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemovePrincipalFromRoleResponse")
    public void removePrincipalFromRole(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleId
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleResponsibilitiesResponse.RoleResponsibilities
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleResponsibilities", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleResponsibilities", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleResponsibilities")
    @ResponseWrapper(localName = "getRoleResponsibilitiesResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleResponsibilitiesResponse")
    public org.kuali.rice.kim.v2_0.GetRoleResponsibilitiesResponse.RoleResponsibilities getRoleResponsibilities(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param roleIds
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetNestedRoleQualifiersForPrincipalByRoleIdsResponse.Attributes
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "attributes", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getNestedRoleQualifiersForPrincipalByRoleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetNestedRoleQualifiersForPrincipalByRoleIds")
    @ResponseWrapper(localName = "getNestedRoleQualifiersForPrincipalByRoleIdsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetNestedRoleQualifiersForPrincipalByRoleIdsResponse")
    public org.kuali.rice.kim.v2_0.GetNestedRoleQualifiersForPrincipalByRoleIdsResponse.Attributes getNestedRoleQualifiersForPrincipalByRoleIds(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleMember
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "createRoleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRoleMember")
    @ResponseWrapper(localName = "createRoleMemberResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRoleMemberResponse")
    public void createRoleMember(
        @WebParam(name = "roleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<RoleMemberType> roleMember)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateMemberQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findDelegateMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindDelegateMembers")
    @ResponseWrapper(localName = "findDelegateMembersResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindDelegateMembersResponse")
    public DelegateMemberQueryResultsType findDelegateMembers(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegationId
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateTypeType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "delegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getDelegateTypeByDelegationId", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegateTypeByDelegationId")
    @ResponseWrapper(localName = "getDelegateTypeByDelegationIdResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegateTypeByDelegationIdResponse")
    public DelegateTypeType getDelegateTypeByDelegationId(
        @WebParam(name = "delegationId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String delegationId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param name
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "role", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleByNamespaceCodeAndName", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleByNamespaceCodeAndName")
    @ResponseWrapper(localName = "getRoleByNamespaceCodeAndNameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleByNamespaceCodeAndNameResponse")
    public RoleType getRoleByNamespaceCodeAndName(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "name", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String name)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleResponsibilityActionId
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRoleResponsibilityAction", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.DeleteRoleResponsibilityAction")
    @ResponseWrapper(localName = "deleteRoleResponsibilityActionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.DeleteRoleResponsibilityActionResponse")
    public void deleteRoleResponsibilityAction(
        @WebParam(name = "roleResponsibilityActionId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleResponsibilityActionId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateMember
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "updateDelegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateDelegateMember")
    @ResponseWrapper(localName = "updateDelegateMemberResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateDelegateMemberResponse")
    public void updateDelegateMember(
        @WebParam(name = "delegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<DelegateMemberType> delegateMember)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param permissionId
     * @param roleId
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "assignPermissionToRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignPermissionToRole")
    @ResponseWrapper(localName = "assignPermissionToRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignPermissionToRoleResponse")
    public void assignPermissionToRole(
        @WebParam(name = "permissionId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionId,
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param role
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "updateRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRole")
    @ResponseWrapper(localName = "updateRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRoleResponse")
    public void updateRole(
        @WebParam(name = "role", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<RoleType> role)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param roleName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByNamespaceAndRolenameResponse.Attributes
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "attributes", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleQualifersForPrincipalByNamespaceAndRolename", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByNamespaceAndRolename")
    @ResponseWrapper(localName = "getRoleQualifersForPrincipalByNamespaceAndRolenameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByNamespaceAndRolenameResponse")
    public org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByNamespaceAndRolenameResponse.Attributes getRoleQualifersForPrincipalByNamespaceAndRolename(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param permissionId
     * @param roleId
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "revokePermissionFromRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RevokePermissionFromRole")
    @ResponseWrapper(localName = "revokePermissionFromRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RevokePermissionFromRoleResponse")
    public void revokePermissionFromRole(
        @WebParam(name = "permissionId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String permissionId,
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateMembers
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "removeDelegateMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveDelegateMembers")
    @ResponseWrapper(localName = "removeDelegateMembersResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveDelegateMembersResponse")
    public void removeDelegateMembers(
        @WebParam(name = "delegateMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<DelegateMemberType> delegateMembers)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param qualification
     * @param roleNamespaceCode
     * @param roleName
     * @param principalIds
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetPrincipalIdSubListWithRoleResponse.PrincipalIds
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "principalIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getPrincipalIdSubListWithRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPrincipalIdSubListWithRole")
    @ResponseWrapper(localName = "getPrincipalIdSubListWithRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetPrincipalIdSubListWithRoleResponse")
    public org.kuali.rice.kim.v2_0.GetPrincipalIdSubListWithRoleResponse.PrincipalIds getPrincipalIdSubListWithRole(
        @WebParam(name = "principalIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> principalIds,
        @WebParam(name = "roleNamespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleNamespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateType
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateTypeType
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "createDelegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateDelegateType")
    @ResponseWrapper(localName = "createDelegateTypeResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateDelegateTypeResponse")
    public DelegateTypeType createDelegateType(
        @WebParam(name = "delegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        DelegateTypeType delegateType)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleMemberQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findRoleMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindRoleMembers")
    @ResponseWrapper(localName = "findRoleMembersResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindRoleMembersResponse")
    public RoleMemberQueryResultsType findRoleMembers(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param name
     * @param namespaceCode
     * @return
     *     returns java.lang.String
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleIdByNamespaceCodeAndName", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleIdByNamespaceCodeAndName")
    @ResponseWrapper(localName = "getRoleIdByNamespaceCodeAndNameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleIdByNamespaceCodeAndNameResponse")
    public String getRoleIdByNamespaceCodeAndName(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "name", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String name)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateType
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateTypeType
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "updateDelegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateDelegateType")
    @ResponseWrapper(localName = "updateDelegateTypeResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateDelegateTypeResponse")
    public DelegateTypeType updateDelegateType(
        @WebParam(name = "delegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        DelegateTypeType delegateType)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param role
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "createRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRole")
    @ResponseWrapper(localName = "createRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRoleResponse")
    public void createRole(
        @WebParam(name = "role", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<RoleType> role)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param roleIds
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByRoleIdsResponse.Attributes
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "attributes", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleQualifersForPrincipalByRoleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByRoleIds")
    @ResponseWrapper(localName = "getRoleQualifersForPrincipalByRoleIdsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByRoleIdsResponse")
    public org.kuali.rice.kim.v2_0.GetRoleQualifersForPrincipalByRoleIdsResponse.Attributes getRoleQualifersForPrincipalByRoleIds(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param groupId
     * @param qualifications
     * @param roleName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleMemberType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "assignGroupToRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignGroupToRole")
    @ResponseWrapper(localName = "assignGroupToRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignGroupToRoleResponse")
    public RoleMemberType assignGroupToRole(
        @WebParam(name = "groupId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String groupId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleId
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isDynamicRoleMembership", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isDynamicRoleMembership", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsDynamicRoleMembership")
    @ResponseWrapper(localName = "isDynamicRoleMembershipResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsDynamicRoleMembershipResponse")
    public boolean isDynamicRoleMembership(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param arg3
     * @param qualification
     * @param principalId
     * @param roleIds
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "principalHasRoleCheckDelegation", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "principalHasRoleCheckDelegation", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.PrincipalHasRoleCheckDelegation")
    @ResponseWrapper(localName = "principalHasRoleCheckDelegationResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.PrincipalHasRoleCheckDelegationResponse")
    public boolean principalHasRoleCheckDelegation(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification,
        @WebParam(name = "arg3", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        boolean arg3)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param roleIds
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "principalHasRole", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "principalHasRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.PrincipalHasRole")
    @ResponseWrapper(localName = "principalHasRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.PrincipalHasRoleResponse")
    public boolean principalHasRole(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleMemberId
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleMemberResponsibilityActionsResponse.RoleResponsibilityActions
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleResponsibilityActions", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleMemberResponsibilityActions", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMemberResponsibilityActions")
    @ResponseWrapper(localName = "getRoleMemberResponsibilityActionsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMemberResponsibilityActionsResponse")
    public org.kuali.rice.kim.v2_0.GetRoleMemberResponsibilityActionsResponse.RoleResponsibilityActions getRoleMemberResponsibilityActions(
        @WebParam(name = "roleMemberId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleMemberId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param delegateType
     * @param roleId
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateTypeType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "delegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getDelegateTypeByRoleIdAndDelegateTypeCode", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegateTypeByRoleIdAndDelegateTypeCode")
    @ResponseWrapper(localName = "getDelegateTypeByRoleIdAndDelegateTypeCodeResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegateTypeByRoleIdAndDelegateTypeCodeResponse")
    public DelegateTypeType getDelegateTypeByRoleIdAndDelegateTypeCode(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId,
        @WebParam(name = "delegateType", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        DelegationTypeType delegateType)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleId
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleTypeRoleMemberIdsResponse.MemberIds
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "memberIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleTypeRoleMemberIds", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleTypeRoleMemberIds")
    @ResponseWrapper(localName = "getRoleTypeRoleMemberIdsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleTypeRoleMemberIdsResponse")
    public org.kuali.rice.kim.v2_0.GetRoleTypeRoleMemberIdsResponse.MemberIds getRoleTypeRoleMemberIds(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isRoleActive", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isRoleActive", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsRoleActive")
    @ResponseWrapper(localName = "isRoleActiveResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsRoleActiveResponse")
    public boolean isRoleActive(
        @WebParam(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String id)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualifications
     * @param roleName
     * @param namespaceCode
     * @param roleId
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "removeRoleFromRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveRoleFromRole")
    @ResponseWrapper(localName = "removeRoleFromRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveRoleFromRoleResponse")
    public void removeRoleFromRole(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetMemberParentRoleIdsResponse.RoleIds
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getMemberParentRoleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetMemberParentRoleIds")
    @ResponseWrapper(localName = "getMemberParentRoleIdsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetMemberParentRoleIdsResponse")
    public org.kuali.rice.kim.v2_0.GetMemberParentRoleIdsResponse.RoleIds getMemberParentRoleIds(
        @WebParam(name = "arg0", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String arg1)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleMember
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "updateRoleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRoleMember")
    @ResponseWrapper(localName = "updateRoleMemberResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRoleMemberResponse")
    public void updateRoleMember(
        @WebParam(name = "roleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<RoleMemberType> roleMember)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param delegateMember
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @RequestWrapper(localName = "createDelegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateDelegateMember")
    @ResponseWrapper(localName = "createDelegateMemberResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateDelegateMemberResponse")
    public void createDelegateMember(
        @WebParam(name = "delegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0", mode = WebParam.Mode.INOUT)
        Holder<DelegateMemberType> delegateMember)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns org.kuali.rice.kim.v2_0.DelegateMemberType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "delegateMember", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getDelegationMemberById", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMemberById")
    @ResponseWrapper(localName = "getDelegationMemberByIdResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetDelegationMemberByIdResponse")
    public DelegateMemberType getDelegationMemberById(
        @WebParam(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String id)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleIds
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetFirstLevelRoleMembersResponse.RoleMemberships
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleMemberships", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getFirstLevelRoleMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetFirstLevelRoleMembers")
    @ResponseWrapper(localName = "getFirstLevelRoleMembersResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetFirstLevelRoleMembersResponse")
    public org.kuali.rice.kim.v2_0.GetFirstLevelRoleMembersResponse.RoleMemberships getFirstLevelRoleMembers(
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRolesSearchResults", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRolesSearchResults")
    @ResponseWrapper(localName = "getRolesSearchResultsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRolesSearchResultsResponse")
    public RoleQueryResultsType getRolesSearchResults(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleMembershipQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "findRoleMemberships", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindRoleMemberships")
    @ResponseWrapper(localName = "findRoleMembershipsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.FindRoleMembershipsResponse")
    public RoleMembershipQueryResultsType findRoleMemberships(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleResponsibilityAction
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleResponsibilityActionType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "createRoleResponsibilityAction", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRoleResponsibilityAction")
    @ResponseWrapper(localName = "createRoleResponsibilityActionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.CreateRoleResponsibilityActionResponse")
    public RoleResponsibilityActionType createRoleResponsibilityAction(
        @WebParam(name = "roleResponsibilityAction", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        RoleResponsibilityActionType roleResponsibilityAction)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "role", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRole")
    @ResponseWrapper(localName = "getRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleResponse")
    public RoleType getRole(
        @WebParam(name = "id", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String id)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleId
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isDerivedRole", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "isDerivedRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsDerivedRole")
    @ResponseWrapper(localName = "isDerivedRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.IsDerivedRoleResponse")
    public boolean isDerivedRole(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param groupId
     * @param qualifications
     * @param roleName
     * @param namespaceCode
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @RequestWrapper(localName = "removeGroupFromRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveGroupFromRole")
    @ResponseWrapper(localName = "removeGroupFromRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.RemoveGroupFromRoleResponse")
    public void removeGroupFromRole(
        @WebParam(name = "groupId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String groupId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualifications
     * @param roleName
     * @param namespaceCode
     * @param roleId
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleMemberType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "assignRoleToRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignRoleToRole")
    @ResponseWrapper(localName = "assignRoleToRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignRoleToRoleResponse")
    public RoleMemberType assignRoleToRole(
        @WebParam(name = "roleId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param roleName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleMemberPrincipalIdsResponse.PrincipalIds
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "principalIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleMemberPrincipalIds", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMemberPrincipalIds")
    @ResponseWrapper(localName = "getRoleMemberPrincipalIdsResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMemberPrincipalIdsResponse")
    public org.kuali.rice.kim.v2_0.GetRoleMemberPrincipalIdsResponse.PrincipalIds getRoleMemberPrincipalIds(
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param ids
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRolesResponse.Roles
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roles", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoles", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoles")
    @ResponseWrapper(localName = "getRolesResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRolesResponse")
    public org.kuali.rice.kim.v2_0.GetRolesResponse.Roles getRoles(
        @WebParam(name = "ids", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> ids)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param principalId
     * @param roleName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetNestedRoleQualifersForPrincipalByNamespaceAndRolenameResponse.Attributes
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "attributes", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getNestedRoleQualifersForPrincipalByNamespaceAndRolename", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetNestedRoleQualifersForPrincipalByNamespaceAndRolename")
    @ResponseWrapper(localName = "getNestedRoleQualifersForPrincipalByNamespaceAndRolenameResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetNestedRoleQualifersForPrincipalByNamespaceAndRolenameResponse")
    public org.kuali.rice.kim.v2_0.GetNestedRoleQualifersForPrincipalByNamespaceAndRolenameResponse.Attributes getNestedRoleQualifersForPrincipalByNamespaceAndRolename(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param roleResponsibilityAction
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleResponsibilityActionType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "updateRoleResponsibilityAction", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRoleResponsibilityAction")
    @ResponseWrapper(localName = "updateRoleResponsibilityActionResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.UpdateRoleResponsibilityActionResponse")
    public RoleResponsibilityActionType updateRoleResponsibilityAction(
        @WebParam(name = "roleResponsibilityAction", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        RoleResponsibilityActionType roleResponsibilityAction)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualifications
     * @param principalId
     * @param roleName
     * @param namespaceCode
     * @return
     *     returns org.kuali.rice.kim.v2_0.RoleMemberType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleMember", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "assignPrincipalToRole", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignPrincipalToRole")
    @ResponseWrapper(localName = "assignPrincipalToRoleResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.AssignPrincipalToRoleResponse")
    public RoleMemberType assignPrincipalToRole(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String principalId,
        @WebParam(name = "namespaceCode", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String namespaceCode,
        @WebParam(name = "roleName", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        String roleName,
        @WebParam(name = "qualifications", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualifications)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param qualification
     * @param roleIds
     * @return
     *     returns org.kuali.rice.kim.v2_0.GetRoleMembersResponse.RoleMemberships
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "roleMemberships", targetNamespace = "http://rice.kuali.org/kim/v2_0")
    @RequestWrapper(localName = "getRoleMembers", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMembers")
    @ResponseWrapper(localName = "getRoleMembersResponse", targetNamespace = "http://rice.kuali.org/kim/v2_0", className = "org.kuali.rice.kim.v2_0.GetRoleMembersResponse")
    public org.kuali.rice.kim.v2_0.GetRoleMembersResponse.RoleMemberships getRoleMembers(
        @WebParam(name = "roleIds", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        List<String> roleIds,
        @WebParam(name = "qualification", targetNamespace = "http://rice.kuali.org/kim/v2_0")
        StringMapEntryListType qualification)
        throws RiceIllegalArgumentException
    ;

}
