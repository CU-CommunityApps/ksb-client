
package org.kuali.rice.kew.v2_0;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "documentTypeService", targetNamespace = "http://rice.kuali.org/kew/v2_0")
@XmlSeeAlso({
    org.kuali.rice.kew.v2_0.ObjectFactory.class,
    org.kuali.rice.core.v2_0.ObjectFactory.class
})
public interface DocumentTypeService {


    /**
     * 
     * @param documentTypeId
     * @return
     *     returns org.kuali.rice.kew.v2_0.DocumentTypeType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "documentType", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getDocumentTypeById", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetDocumentTypeById")
    @ResponseWrapper(localName = "getDocumentTypeByIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetDocumentTypeByIdResponse")
    public DocumentTypeType getDocumentTypeById(
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeId
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isActive", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "isActiveById", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsActiveById")
    @ResponseWrapper(localName = "isActiveByIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsActiveByIdResponse")
    public boolean isActiveById(
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeId
     * @return
     *     returns org.kuali.rice.kew.v2_0.RoutePathType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "routePath", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getRoutePathForDocumentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetRoutePathForDocumentTypeId")
    @ResponseWrapper(localName = "getRoutePathForDocumentTypeIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetRoutePathForDocumentTypeIdResponse")
    public RoutePathType getRoutePathForDocumentTypeId(
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeId
     * @param routeNodeName
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "hasRouteNode", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "hasRouteNodeForDocumentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.HasRouteNodeForDocumentTypeId")
    @ResponseWrapper(localName = "hasRouteNodeForDocumentTypeIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.HasRouteNodeForDocumentTypeIdResponse")
    public boolean hasRouteNodeForDocumentTypeId(
        @WebParam(name = "routeNodeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String routeNodeName,
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeName
     * @return
     *     returns java.lang.String
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getIdByName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetIdByName")
    @ResponseWrapper(localName = "getIdByNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetIdByNameResponse")
    public String getIdByName(
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeId
     * @return
     *     returns java.lang.String
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getNameById", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetNameById")
    @ResponseWrapper(localName = "getNameByIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetNameByIdResponse")
    public String getNameById(
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param routeNodeInstances
     * @param principalId
     * @param documentTypeName
     * @param routeStatusCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isSuperUser", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "canSuperUserApproveDocument", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserApproveDocument")
    @ResponseWrapper(localName = "canSuperUserApproveDocumentResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserApproveDocumentResponse")
    public boolean canSuperUserApproveDocument(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String principalId,
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName,
        @WebParam(name = "routeNodeInstances", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        List<RouteNodeInstanceType> routeNodeInstances,
        @WebParam(name = "routeStatusCode", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String routeStatusCode)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeId
     * @param principalId
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isSuperUser", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "isSuperUserForDocumentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsSuperUserForDocumentTypeId")
    @ResponseWrapper(localName = "isSuperUserForDocumentTypeIdResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsSuperUserForDocumentTypeIdResponse")
    public boolean isSuperUserForDocumentTypeId(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String principalId,
        @WebParam(name = "documentTypeId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeId)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeName
     * @return
     *     returns org.kuali.rice.kew.v2_0.DocumentTypeType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "documentType", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getDocumentTypeByName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetDocumentTypeByName")
    @ResponseWrapper(localName = "getDocumentTypeByNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetDocumentTypeByNameResponse")
    public DocumentTypeType getDocumentTypeByName(
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param principalId
     * @param documentTypeName
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isSuperUser", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "isSuperUserForDocumentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsSuperUserForDocumentTypeName")
    @ResponseWrapper(localName = "isSuperUserForDocumentTypeNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsSuperUserForDocumentTypeNameResponse")
    public boolean isSuperUserForDocumentTypeName(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String principalId,
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param routeNodeName
     * @param documentTypeName
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "hasRouteNode", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "hasRouteNodeForDocumentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.HasRouteNodeForDocumentTypeName")
    @ResponseWrapper(localName = "hasRouteNodeForDocumentTypeNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.HasRouteNodeForDocumentTypeNameResponse")
    public boolean hasRouteNodeForDocumentTypeName(
        @WebParam(name = "routeNodeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String routeNodeName,
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<org.kuali.rice.kew.v2_0.DocumentTypeType>
     */
    @WebMethod
    @WebResult(name = "documentTypes", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "findAllDocumentTypes", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.FindAllDocumentTypes")
    @ResponseWrapper(localName = "findAllDocumentTypesResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.FindAllDocumentTypesResponse")
    public List<DocumentTypeType> findAllDocumentTypes();

    /**
     * 
     * @param documentTypeName
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isActive", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "isActiveByName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsActiveByName")
    @ResponseWrapper(localName = "isActiveByNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.IsActiveByNameResponse")
    public boolean isActiveByName(
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param documentTypeName
     * @return
     *     returns org.kuali.rice.kew.v2_0.RoutePathType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "routePath", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "getRoutePathForDocumentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetRoutePathForDocumentTypeName")
    @ResponseWrapper(localName = "getRoutePathForDocumentTypeNameResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.GetRoutePathForDocumentTypeNameResponse")
    public RoutePathType getRoutePathForDocumentTypeName(
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param routeNodeInstances
     * @param principalId
     * @param documentTypeName
     * @param routeStatusCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isSuperUser", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "canSuperUserDisapproveDocument", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserDisapproveDocument")
    @ResponseWrapper(localName = "canSuperUserDisapproveDocumentResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserDisapproveDocumentResponse")
    public boolean canSuperUserDisapproveDocument(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String principalId,
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName,
        @WebParam(name = "routeNodeInstances", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        List<RouteNodeInstanceType> routeNodeInstances,
        @WebParam(name = "routeStatusCode", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String routeStatusCode)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param routeNodeInstances
     * @param principalId
     * @param documentTypeName
     * @param routeStatusCode
     * @return
     *     returns boolean
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "isSuperUser", targetNamespace = "http://rice.kuali.org/kew/v2_0")
    @RequestWrapper(localName = "canSuperUserApproveSingleActionRequest", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserApproveSingleActionRequest")
    @ResponseWrapper(localName = "canSuperUserApproveSingleActionRequestResponse", targetNamespace = "http://rice.kuali.org/kew/v2_0", className = "org.kuali.rice.kew.v2_0.CanSuperUserApproveSingleActionRequestResponse")
    public boolean canSuperUserApproveSingleActionRequest(
        @WebParam(name = "principalId", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String principalId,
        @WebParam(name = "documentTypeName", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String documentTypeName,
        @WebParam(name = "routeNodeInstances", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        List<RouteNodeInstanceType> routeNodeInstances,
        @WebParam(name = "routeStatusCode", targetNamespace = "http://rice.kuali.org/kew/v2_0")
        String routeStatusCode)
        throws RiceIllegalArgumentException
    ;

}
